valaccode_sources = files(
	'valaccodeassignment.vala',
	'valaccodebinaryexpression.vala',
	'valaccodeblock.vala',
	'valaccodebreakstatement.vala',
	'valaccodecasestatement.vala',
	'valaccodecastexpression.vala',
	'valaccodecommaexpression.vala',
	'valaccodecomment.vala',
	'valaccodeconditionalexpression.vala',
	'valaccodeconstant.vala',
	'valaccodecontinuestatement.vala',
	'valaccodedeclaration.vala',
	'valaccodedeclarator.vala',
	'valaccodedefine.vala',
	'valaccodedostatement.vala',
	'valaccodeelementaccess.vala',
	'valaccodeemptystatement.vala',
	'valaccodeenum.vala',
	'valaccodeenumvalue.vala',
	'valaccodeexpressionstatement.vala',
	'valaccodeexpression.vala',
	'valaccodefile.vala',
	'valaccodeforstatement.vala',
	'valaccodefragment.vala',
	'valaccodefunctioncall.vala',
	'valaccodefunctiondeclarator.vala',
	'valaccodefunction.vala',
	'valaccodeggnucsection.vala',
	'valaccodegotostatement.vala',
	'valaccodeidentifier.vala',
	'valaccodeifsection.vala',
	'valaccodeifstatement.vala',
	'valaccodeincludedirective.vala',
	'valaccodeinitializerlist.vala',
	'valaccodeinvalidexpression.vala',
	'valaccodelabel.vala',
	'valaccodelinedirective.vala',
	'valaccodemacroreplacement.vala',
	'valaccodememberaccess.vala',
	'valaccodemodifiers.vala',
	'valaccodenewline.vala',
	'valaccodenode.vala',
	'valaccodeoncesection.vala',
	'valaccodeparameter.vala',
	'valaccodeparenthesizedexpression.vala',
	'valaccodereturnstatement.vala',
	'valaccodestatement.vala',
	'valaccodestruct.vala',
	'valaccodeswitchstatement.vala',
	'valaccodetypedefinition.vala',
	'valaccodeunaryexpression.vala',
	'valaccodevariabledeclarator.vala',
	'valaccodewhilestatement.vala',
	'valaccodewriter.vala'
)

valaccode_lib = static_library(
	'valaccode',
	valaccode_sources,
	dependencies: [gobject_dep, valagee_dep, valacore_dep],
	install: false,
	vala_args: ['--use-header'],
	vala_header: 'valaccode.h',
	vala_vapi: 'valaccode.vapi',
)

valaccode_dep = declare_dependency(
	link_with: [valaccode_lib],
	dependencies: [valagee_dep],
	include_directories: include_directories('.'),
)
