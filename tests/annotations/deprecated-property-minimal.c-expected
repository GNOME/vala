/* annotations_deprecated_property_minimal.c generated by valac, the Vala compiler
 * generated from annotations_deprecated_property_minimal.vala, do not modify */

#include <glib.h>

#if !defined(VALA_STRICT_C)
#if !defined(__clang__) && defined(__GNUC__) && (__GNUC__ >= 14)
#pragma GCC diagnostic warning "-Wincompatible-pointer-types"
#elif defined(__clang__) && (__clang_major__ >= 16)
#pragma clang diagnostic ignored "-Wincompatible-function-pointer-types"
#pragma clang diagnostic ignored "-Wincompatible-pointer-types"
#endif
#endif
#if !defined(VALA_EXTERN)
#if defined(_WIN32) || defined(__CYGWIN__)
#define VALA_EXTERN __declspec(dllexport) extern
#elif __GNUC__ >= 4
#define VALA_EXTERN __attribute__((visibility("default"))) extern
#else
#define VALA_EXTERN extern
#endif
#endif

typedef struct _Foo Foo;

struct _Foo {
	void* _bar;
};

VALA_EXTERN void* foo_get_bar (Foo self) G_GNUC_DEPRECATED ;
VALA_EXTERN void foo_set_bar (Foo self,
                  void* value) G_GNUC_DEPRECATED ;
static void _vala_main (void);

void*
foo_get_bar (Foo self)
{
	void* result;
	void* _tmp0_;
	_tmp0_ = self._bar;
	result = _tmp0_;
	return result;
}

void
foo_set_bar (Foo self,
             void* value)
{
	self._bar = value;
}

static void
_vala_main (void)
{
}

int
main (int argc,
      char ** argv)
{
	_vala_main ();
	return 0;
}

