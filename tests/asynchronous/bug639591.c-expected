/* asynchronous_bug639591.c generated by valac, the Vala compiler
 * generated from asynchronous_bug639591.vala, do not modify */

#include <glib.h>
#include <gio/gio.h>

#if !defined(VALA_STRICT_C)
#if !defined(__clang__) && defined(__GNUC__) && (__GNUC__ >= 14)
#pragma GCC diagnostic warning "-Wincompatible-pointer-types"
#elif defined(__clang__) && (__clang_major__ >= 16)
#pragma clang diagnostic ignored "-Wincompatible-function-pointer-types"
#pragma clang diagnostic ignored "-Wincompatible-pointer-types"
#endif
#endif
#if !defined(VALA_EXTERN)
#if defined(_WIN32) || defined(__CYGWIN__)
#define VALA_EXTERN __declspec(dllexport) extern
#elif __GNUC__ >= 4
#define VALA_EXTERN __attribute__((visibility("default"))) extern
#else
#define VALA_EXTERN extern
#endif
#endif

typedef void (*Deleg) (gpointer user_data);
typedef struct _Block1Data Block1Data;
typedef struct _FooData FooData;

struct _Block1Data {
	int _ref_count_;
	Deleg deleg;
	gpointer deleg_target;
	GDestroyNotify deleg_target_destroy_notify;
	gpointer _async_data_;
};

struct _FooData {
	int _state_;
	GObject* _source_object_;
	GAsyncResult* _res_;
	GTask* _async_result;
	Deleg deleg;
	gpointer deleg_target;
	GDestroyNotify deleg_target_destroy_notify;
	Block1Data* _data1_;
	Deleg d;
	gpointer d_target;
	GDestroyNotify d_target_destroy_notify;
};

static void foo_data_free (gpointer _data);
VALA_EXTERN void foo (Deleg deleg,
          gpointer deleg_target,
          GDestroyNotify deleg_target_destroy_notify,
          GAsyncReadyCallback _callback_,
          gpointer _user_data_);
VALA_EXTERN void foo_finish (GAsyncResult* _res_);
static gboolean foo_co (FooData* _data_);
static Block1Data* block1_data_ref (Block1Data* _data1_);
static void block1_data_unref (void * _userdata_);
static void _vala_lambda0_ (Block1Data* _data1_);
static void __vala_lambda0__deleg (gpointer self);
static void _vala_main (void);

static void
foo_data_free (gpointer _data)
{
	FooData* _data_;
	_data_ = _data;
	g_slice_free (FooData, _data_);
}

void
foo (Deleg deleg,
     gpointer deleg_target,
     GDestroyNotify deleg_target_destroy_notify,
     GAsyncReadyCallback _callback_,
     gpointer _user_data_)
{
	FooData* _data_;
	_data_ = g_slice_new0 (FooData);
	_data_->_async_result = g_task_new (NULL, NULL, _callback_, _user_data_);
	g_task_set_task_data (_data_->_async_result, _data_, foo_data_free);
	(_data_->deleg_target_destroy_notify == NULL) ? NULL : (_data_->deleg_target_destroy_notify (_data_->deleg_target), NULL);
	_data_->deleg = NULL;
	_data_->deleg_target = NULL;
	_data_->deleg_target_destroy_notify = NULL;
	_data_->deleg = deleg;
	_data_->deleg_target = deleg_target;
	_data_->deleg_target_destroy_notify = deleg_target_destroy_notify;
	foo_co (_data_);
}

void
foo_finish (GAsyncResult* _res_)
{
	FooData* _data_;
	_data_ = g_task_propagate_pointer (G_TASK (_res_), NULL);
}

static Block1Data*
block1_data_ref (Block1Data* _data1_)
{
	g_atomic_int_inc (&_data1_->_ref_count_);
	return _data1_;
}

static void
block1_data_unref (void * _userdata_)
{
	Block1Data* _data1_;
	_data1_ = (Block1Data*) _userdata_;
	if (g_atomic_int_dec_and_test (&_data1_->_ref_count_)) {
		(_data1_->deleg_target_destroy_notify == NULL) ? NULL : (_data1_->deleg_target_destroy_notify (_data1_->deleg_target), NULL);
		_data1_->deleg = NULL;
		_data1_->deleg_target = NULL;
		_data1_->deleg_target_destroy_notify = NULL;
		g_slice_free (Block1Data, _data1_);
	}
}

static void
_vala_lambda0_ (Block1Data* _data1_)
{
	_data1_->deleg (_data1_->deleg_target);
}

static void
__vala_lambda0__deleg (gpointer self)
{
	_vala_lambda0_ (self);
}

static gboolean
foo_co (FooData* _data_)
{
	switch (_data_->_state_) {
		case 0:
		goto _state_0;
		default:
		g_assert_not_reached ();
	}
	_state_0:
	_data_->_data1_ = g_slice_new0 (Block1Data);
	_data_->_data1_->_ref_count_ = 1;
	(_data_->_data1_->deleg_target_destroy_notify == NULL) ? NULL : (_data_->_data1_->deleg_target_destroy_notify (_data_->_data1_->deleg_target), NULL);
	_data_->_data1_->deleg = NULL;
	_data_->_data1_->deleg_target = NULL;
	_data_->_data1_->deleg_target_destroy_notify = NULL;
	_data_->_data1_->deleg = _data_->deleg;
	_data_->_data1_->deleg_target = _data_->deleg_target;
	_data_->_data1_->deleg_target_destroy_notify = _data_->deleg_target_destroy_notify;
	_data_->_data1_->_async_data_ = _data_;
	_data_->d = __vala_lambda0__deleg;
	_data_->d_target = block1_data_ref (_data_->_data1_);
	_data_->d_target_destroy_notify = block1_data_unref;
	(_data_->d_target_destroy_notify == NULL) ? NULL : (_data_->d_target_destroy_notify (_data_->d_target), NULL);
	_data_->d = NULL;
	_data_->d_target = NULL;
	_data_->d_target_destroy_notify = NULL;
	_data_->d = NULL;
	_data_->d_target = NULL;
	_data_->d_target_destroy_notify = NULL;
	(_data_->d_target_destroy_notify == NULL) ? NULL : (_data_->d_target_destroy_notify (_data_->d_target), NULL);
	_data_->d = NULL;
	_data_->d_target = NULL;
	_data_->d_target_destroy_notify = NULL;
	block1_data_unref (_data_->_data1_);
	_data_->_data1_ = NULL;
	g_task_return_pointer (_data_->_async_result, _data_, NULL);
	if (_data_->_state_ != 0) {
		while (!g_task_get_completed (_data_->_async_result)) {
			g_main_context_iteration (g_task_get_context (_data_->_async_result), TRUE);
		}
	}
	g_object_unref (_data_->_async_result);
	return FALSE;
}

static void
_vala_main (void)
{
}

int
main (int argc,
      char ** argv)
{
	_vala_main ();
	return 0;
}

