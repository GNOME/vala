/* asynchronous_bug597294.c generated by valac, the Vala compiler
 * generated from asynchronous_bug597294.vala, do not modify */

#include <glib.h>
#include <gio/gio.h>

#if !defined(VALA_STRICT_C)
#if !defined(__clang__) && defined(__GNUC__) && (__GNUC__ >= 14)
#pragma GCC diagnostic warning "-Wincompatible-pointer-types"
#elif defined(__clang__) && (__clang_major__ >= 16)
#pragma clang diagnostic ignored "-Wincompatible-function-pointer-types"
#pragma clang diagnostic ignored "-Wincompatible-pointer-types"
#endif
#endif
#if !defined(VALA_EXTERN)
#if defined(_WIN32) || defined(__CYGWIN__)
#define VALA_EXTERN __declspec(dllexport) extern
#elif __GNUC__ >= 4
#define VALA_EXTERN __attribute__((visibility("default"))) extern
#else
#define VALA_EXTERN extern
#endif
#endif

typedef void (*Foo) (gpointer user_data);
typedef struct _DoFooData DoFooData;

struct _DoFooData {
	int _state_;
	GObject* _source_object_;
	GAsyncResult* _res_;
	GTask* _async_result;
	Foo f;
	gpointer f_target;
	GDestroyNotify f_target_destroy_notify;
};

static void do_foo_data_free (gpointer _data);
VALA_EXTERN void do_foo (Foo f,
             gpointer f_target,
             GDestroyNotify f_target_destroy_notify,
             GAsyncReadyCallback _callback_,
             gpointer _user_data_);
VALA_EXTERN void do_foo_finish (GAsyncResult* _res_);
static gboolean do_foo_co (DoFooData* _data_);
static void _vala_main (void);

static void
do_foo_data_free (gpointer _data)
{
	DoFooData* _data_;
	_data_ = _data;
	(_data_->f_target_destroy_notify == NULL) ? NULL : (_data_->f_target_destroy_notify (_data_->f_target), NULL);
	_data_->f = NULL;
	_data_->f_target = NULL;
	_data_->f_target_destroy_notify = NULL;
	g_slice_free (DoFooData, _data_);
}

void
do_foo (Foo f,
        gpointer f_target,
        GDestroyNotify f_target_destroy_notify,
        GAsyncReadyCallback _callback_,
        gpointer _user_data_)
{
	DoFooData* _data_;
	_data_ = g_slice_new0 (DoFooData);
	_data_->_async_result = g_task_new (NULL, NULL, _callback_, _user_data_);
	g_task_set_task_data (_data_->_async_result, _data_, do_foo_data_free);
	(_data_->f_target_destroy_notify == NULL) ? NULL : (_data_->f_target_destroy_notify (_data_->f_target), NULL);
	_data_->f = NULL;
	_data_->f_target = NULL;
	_data_->f_target_destroy_notify = NULL;
	_data_->f = f;
	_data_->f_target = f_target;
	_data_->f_target_destroy_notify = f_target_destroy_notify;
	do_foo_co (_data_);
}

void
do_foo_finish (GAsyncResult* _res_)
{
	DoFooData* _data_;
	_data_ = g_task_propagate_pointer (G_TASK (_res_), NULL);
}

static gboolean
do_foo_co (DoFooData* _data_)
{
	switch (_data_->_state_) {
		case 0:
		goto _state_0;
		default:
		g_assert_not_reached ();
	}
	_state_0:
	_data_->f (_data_->f_target);
	(_data_->f_target_destroy_notify == NULL) ? NULL : (_data_->f_target_destroy_notify (_data_->f_target), NULL);
	_data_->f = NULL;
	_data_->f_target = NULL;
	_data_->f_target_destroy_notify = NULL;
	g_task_return_pointer (_data_->_async_result, _data_, NULL);
	if (_data_->_state_ != 0) {
		while (!g_task_get_completed (_data_->_async_result)) {
			g_main_context_iteration (g_task_get_context (_data_->_async_result), TRUE);
		}
	}
	g_object_unref (_data_->_async_result);
	return FALSE;
}

static void
_vala_main (void)
{
}

int
main (int argc,
      char ** argv)
{
	_vala_main ();
	return 0;
}

