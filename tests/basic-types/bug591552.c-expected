/* basic_types_bug591552.c generated by valac, the Vala compiler
 * generated from basic_types_bug591552.vala, do not modify */

#include <glib.h>
#include <string.h>

#if !defined(VALA_STRICT_C)
#if !defined(__clang__) && defined(__GNUC__) && (__GNUC__ >= 14)
#pragma GCC diagnostic warning "-Wincompatible-pointer-types"
#elif defined(__clang__) && (__clang_major__ >= 16)
#pragma clang diagnostic ignored "-Wincompatible-function-pointer-types"
#pragma clang diagnostic ignored "-Wincompatible-pointer-types"
#endif
#endif

#define _g_free0(var) ((var == NULL) ? NULL : (var = (g_free (var), NULL)))

static void _vala_main (void);
static gint* _int_dup (gint* self);
static gboolean* _bool_dup (gboolean* self);
static gboolean _int_equal (const gint * s1,
                     const gint * s2);

static gint*
_int_dup (gint* self)
{
	gint* dup;
	dup = g_new0 (gint, 1);
	memcpy (dup, self, sizeof (gint));
	return dup;
}

static gpointer
__int_dup0 (gpointer self)
{
	return self ? _int_dup (self) : NULL;
}

static gboolean*
_bool_dup (gboolean* self)
{
	gboolean* dup;
	dup = g_new0 (gboolean, 1);
	memcpy (dup, self, sizeof (gboolean));
	return dup;
}

static gpointer
__bool_dup0 (gpointer self)
{
	return self ? _bool_dup (self) : NULL;
}

static gboolean
_int_equal (const gint * s1,
            const gint * s2)
{
	if (s1 == s2) {
		return TRUE;
	}
	if (s1 == NULL) {
		return FALSE;
	}
	if (s2 == NULL) {
		return FALSE;
	}
	return (*s1) == (*s2);
}

static void
_vala_main (void)
{
	gint a = 0;
	gint b = 0;
	gint* c = NULL;
	gint _tmp0_;
	gint* _tmp1_;
	gint* d = NULL;
	gint _tmp2_;
	gint* _tmp3_;
	gboolean* test = NULL;
	gint _tmp4_;
	gint* _tmp5_;
	gint _tmp6_;
	gint* _tmp7_;
	gboolean _tmp8_;
	gboolean* _tmp9_;
	gint* _tmp10_;
	gint* _tmp11_;
	gint* _tmp12_;
	gint _tmp13_;
	gint* _tmp14_;
	gint* _tmp15_;
	gint _tmp16_;
	gint* _tmp17_;
	gint* _tmp18_;
	gint* _tmp19_;
	gint _tmp20_;
	gint* _tmp21_;
	gint* _tmp22_;
	gint* _tmp23_;
	gint _tmp24_;
	gint* _tmp25_;
	gint* _tmp26_;
	gint* _tmp27_;
	gint _tmp28_;
	gint* _tmp29_;
	gint* _tmp30_;
	gint* _tmp31_;
	gboolean _tmp32_;
	gboolean* _tmp33_;
	gint* _tmp34_;
	gboolean _tmp35_;
	gboolean* _tmp36_;
	gboolean _tmp37_ = FALSE;
	gboolean* _tmp38_;
	gboolean* _tmp40_;
	gint* _tmp41_;
	gint* _tmp42_;
	gint _tmp43_;
	gint _tmp44_;
	gboolean _tmp45_;
	gboolean* _tmp46_;
	gint* _tmp47_;
	gboolean _tmp48_;
	gboolean* _tmp49_;
	gint* _tmp50_;
	gint* _tmp51_;
	gboolean _tmp52_;
	gboolean* _tmp53_;
	a = 1;
	b = 2;
	_tmp0_ = 3;
	_tmp1_ = __int_dup0 (&_tmp0_);
	c = _tmp1_;
	_tmp2_ = 4;
	_tmp3_ = __int_dup0 (&_tmp2_);
	d = _tmp3_;
	test = NULL;
	a = 1;
	b = 2;
	_tmp4_ = 3;
	_tmp5_ = __int_dup0 (&_tmp4_);
	_g_free0 (c);
	c = _tmp5_;
	_tmp6_ = 4;
	_tmp7_ = __int_dup0 (&_tmp6_);
	_g_free0 (d);
	d = _tmp7_;
	_tmp8_ = FALSE;
	_tmp9_ = __bool_dup0 (&_tmp8_);
	_g_free0 (test);
	test = _tmp9_;
	a = a + b;
	_tmp10_ = c;
	a = b - (*_tmp10_);
	_tmp11_ = c;
	_tmp12_ = d;
	a = (*_tmp11_) & (*_tmp12_);
	_tmp13_ = a ^ b;
	_tmp14_ = __int_dup0 (&_tmp13_);
	_g_free0 (c);
	c = _tmp14_;
	_tmp15_ = c;
	_tmp16_ = b | (*_tmp15_);
	_tmp17_ = __int_dup0 (&_tmp16_);
	_g_free0 (c);
	c = _tmp17_;
	_tmp18_ = c;
	_tmp19_ = d;
	_tmp20_ = (*_tmp18_) % (*_tmp19_);
	_tmp21_ = __int_dup0 (&_tmp20_);
	_g_free0 (c);
	c = _tmp21_;
	_tmp22_ = d;
	_tmp23_ = c;
	_tmp24_ = (*_tmp22_) % (*_tmp23_);
	_tmp25_ = __int_dup0 (&_tmp24_);
	_g_free0 (d);
	d = _tmp25_;
	_tmp26_ = c;
	_tmp27_ = d;
	_tmp28_ = (*_tmp26_) | (a & (*_tmp27_));
	_tmp29_ = __int_dup0 (&_tmp28_);
	_g_free0 (c);
	c = _tmp29_;
	_tmp30_ = c;
	_tmp31_ = d;
	_tmp32_ = ((*_tmp31_) & (*_tmp30_)) == (*_tmp30_);
	_tmp33_ = __bool_dup0 (&_tmp32_);
	_g_free0 (test);
	test = _tmp33_;
	_tmp34_ = d;
	_tmp35_ = b > (*_tmp34_);
	_tmp36_ = __bool_dup0 (&_tmp35_);
	_g_free0 (test);
	test = _tmp36_;
	_tmp38_ = test;
	if (*_tmp38_) {
		_tmp37_ = TRUE;
	} else {
		gboolean* _tmp39_;
		_tmp39_ = test;
		_tmp37_ = *_tmp39_;
	}
	_tmp40_ = __bool_dup0 (&_tmp37_);
	_g_free0 (test);
	test = _tmp40_;
	_tmp41_ = c;
	_tmp42_ = d;
	_tmp43_ = *_tmp41_;
	_tmp44_ = *_tmp42_;
	_tmp45_ = ((b > _tmp43_) && (_tmp43_ > _tmp44_)) && (_tmp44_ < a);
	_tmp46_ = __bool_dup0 (&_tmp45_);
	_g_free0 (test);
	test = _tmp46_;
	_tmp47_ = c;
	_tmp48_ = _int_equal (&a, _tmp47_) == TRUE;
	_tmp49_ = __bool_dup0 (&_tmp48_);
	_g_free0 (test);
	test = _tmp49_;
	_tmp50_ = c;
	_tmp51_ = d;
	_tmp52_ = _int_equal (_tmp50_, _tmp51_) == TRUE;
	_tmp53_ = __bool_dup0 (&_tmp52_);
	_g_free0 (test);
	test = _tmp53_;
	_g_free0 (test);
	_g_free0 (d);
	_g_free0 (c);
}

int
main (int argc,
      char ** argv)
{
	_vala_main ();
	return 0;
}

