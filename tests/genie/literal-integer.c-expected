/* genie_literal_integer.c generated by valac, the Vala compiler
 * generated from genie_literal_integer.gs, do not modify */

#include <stdlib.h>
#include <string.h>
#include <glib.h>

#if !defined(VALA_STRICT_C)
#if !defined(__clang__) && defined(__GNUC__) && (__GNUC__ >= 14)
#pragma GCC diagnostic warning "-Wincompatible-pointer-types"
#elif defined(__clang__) && (__clang_major__ >= 16)
#pragma clang diagnostic ignored "-Wincompatible-function-pointer-types"
#pragma clang diagnostic ignored "-Wincompatible-pointer-types"
#endif
#endif

#define _vala_assert(expr, msg) if G_LIKELY (expr) ; else g_assertion_message_expr (G_LOG_DOMAIN, __FILE__, __LINE__, G_STRFUNC, msg);
#define _vala_return_if_fail(expr, msg) if G_LIKELY (expr) ; else { g_return_if_fail_warning (G_LOG_DOMAIN, G_STRFUNC, msg); return; }
#define _vala_return_val_if_fail(expr, msg, val) if G_LIKELY (expr) ; else { g_return_if_fail_warning (G_LOG_DOMAIN, G_STRFUNC, msg); return val; }
#define _vala_warn_if_fail(expr, msg) if G_LIKELY (expr) ; else g_warn_message (G_LOG_DOMAIN, __FILE__, __LINE__, G_STRFUNC, msg);

static void _vala_main (gchar** args,
                 gint args_length1);

static void
_vala_main (gchar** args,
            gint args_length1)
{
	gint a = 0;
	gint64 b = 0LL;
	gint64 c = 0LL;
	guint d = 0U;
	gint e = 0;
	a = 101;
	_vala_assert (a == 101, "a == 101");
	b = 0xdeadbeefLL;
	_vala_assert (b == 3735928559LL, "b == 3735928559");
	c = 2003LL;
	_vala_assert (c == 2003LL, "c == 2003ll");
	d = 01307U;
	_vala_assert (d == 711U, "d == 711u");
	e = -0110157032;
	_vala_assert (e == (-18931226), "e == -18931226");
}

int
main (int argc,
      char ** argv)
{
	_vala_main (argv, argc);
	return 0;
}

