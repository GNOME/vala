/* delegates_implicit_local_variable.c generated by valac, the Vala compiler
 * generated from delegates_implicit_local_variable.vala, do not modify */

#include <glib.h>

#if !defined(VALA_STRICT_C)
#if !defined(__clang__) && defined(__GNUC__) && (__GNUC__ >= 14)
#pragma GCC diagnostic warning "-Wincompatible-pointer-types"
#elif defined(__clang__) && (__clang_major__ >= 16)
#pragma clang diagnostic ignored "-Wincompatible-function-pointer-types"
#pragma clang diagnostic ignored "-Wincompatible-pointer-types"
#endif
#endif

typedef gboolean (*GSourceDispatchFunc) (GSource* source, GSourceFunc _callback, gpointer _callback_target);
#define _g_source_unref0(var) ((var == NULL) ? NULL : (var = (g_source_unref (var), NULL)))

static void _vala_main (void);
static gboolean _vala_lambda0_ (void);
static gboolean __vala_lambda0__gsource_dispatch_func (GSource* source,
                                                GSourceFunc _callback,
                                                gpointer _callback_target);

static gboolean
_vala_lambda0_ (void)
{
	gboolean result;
	result = FALSE;
	return result;
}

static gboolean
__vala_lambda0__gsource_dispatch_func (GSource* source,
                                       GSourceFunc _callback,
                                       gpointer _callback_target)
{
	gboolean result;
	result = _vala_lambda0_ ();
	return result;
}

static void
_vala_main (void)
{
	GSourceFuncs foo = {0};
	GSourceFuncs _tmp0_ = {0};
	GSource* bar = NULL;
	GSourceFuncs _tmp1_;
	GSourceDispatchFunc _tmp2_;
	_tmp0_.prepare = NULL;
	_tmp0_.check = NULL;
	_tmp0_.dispatch = __vala_lambda0__gsource_dispatch_func;
	_tmp0_.finalize = NULL;
	foo = _tmp0_;
	bar = NULL;
	_tmp1_ = foo;
	_tmp2_ = _tmp1_.dispatch;
	_tmp2_ (bar, NULL, NULL);
	_g_source_unref0 (bar);
}

int
main (int argc,
      char ** argv)
{
	_vala_main ();
	return 0;
}

