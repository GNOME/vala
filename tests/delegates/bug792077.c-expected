/* delegates_bug792077.c generated by valac, the Vala compiler
 * generated from delegates_bug792077.vala, do not modify */

#include <glib.h>

#if !defined(VALA_STRICT_C)
#if !defined(__clang__) && defined(__GNUC__) && (__GNUC__ >= 14)
#pragma GCC diagnostic warning "-Wincompatible-pointer-types"
#elif defined(__clang__) && (__clang_major__ >= 16)
#pragma clang diagnostic ignored "-Wincompatible-function-pointer-types"
#pragma clang diagnostic ignored "-Wincompatible-pointer-types"
#endif
#endif
#if !defined(VALA_EXTERN)
#if defined(_WIN32) || defined(__CYGWIN__)
#define VALA_EXTERN __declspec(dllexport) extern
#elif __GNUC__ >= 4
#define VALA_EXTERN __attribute__((visibility("default"))) extern
#else
#define VALA_EXTERN extern
#endif
#endif

typedef void (*FooFunc) (gint i, gpointer user_data);
typedef FooFunc (*BarFunc) (gpointer* result_target, GDestroyNotify* result_target_destroy_notify, gpointer user_data);
#define _vala_assert(expr, msg) if G_LIKELY (expr) ; else g_assertion_message_expr (G_LOG_DOMAIN, __FILE__, __LINE__, G_STRFUNC, msg);
#define _vala_return_if_fail(expr, msg) if G_LIKELY (expr) ; else { g_return_if_fail_warning (G_LOG_DOMAIN, G_STRFUNC, msg); return; }
#define _vala_return_val_if_fail(expr, msg, val) if G_LIKELY (expr) ; else { g_return_if_fail_warning (G_LOG_DOMAIN, G_STRFUNC, msg); return val; }
#define _vala_warn_if_fail(expr, msg) if G_LIKELY (expr) ; else g_warn_message (G_LOG_DOMAIN, __FILE__, __LINE__, G_STRFUNC, msg);

VALA_EXTERN gint result;
gint result = 0;

static void _vala_main (void);
static FooFunc _vala_lambda0_ (gpointer* result_target,
                        GDestroyNotify* result_target_destroy_notify);
static void _vala_lambda1_ (gint data);
static void __vala_lambda1__foo_func (gint i,
                               gpointer self);
static FooFunc __vala_lambda0__bar_func (gpointer* result_target,
                                  GDestroyNotify* result_target_destroy_notify,
                                  gpointer self);

static void
_vala_lambda1_ (gint data)
{
	result = data;
}

static void
__vala_lambda1__foo_func (gint i,
                          gpointer self)
{
	_vala_lambda1_ (i);
}

static FooFunc
_vala_lambda0_ (gpointer* result_target,
                GDestroyNotify* result_target_destroy_notify)
{
	FooFunc _tmp0_;
	gpointer _tmp0__target;
	GDestroyNotify _tmp0__target_destroy_notify;
	FooFunc result;
	_tmp0_ = __vala_lambda1__foo_func;
	_tmp0__target = NULL;
	_tmp0__target_destroy_notify = NULL;
	*result_target = _tmp0__target;
	*result_target_destroy_notify = _tmp0__target_destroy_notify;
	result = _tmp0_;
	return result;
}

static FooFunc
__vala_lambda0__bar_func (gpointer* result_target,
                          GDestroyNotify* result_target_destroy_notify,
                          gpointer self)
{
	FooFunc result;
	result = _vala_lambda0_ (result_target, result_target_destroy_notify);
	return result;
}

static void
_vala_main (void)
{
	BarFunc func_gen = NULL;
	gpointer func_gen_target;
	GDestroyNotify func_gen_target_destroy_notify;
	FooFunc func = NULL;
	gpointer _tmp0_ = NULL;
	GDestroyNotify _tmp1_ = NULL;
	FooFunc _tmp2_;
	gpointer func_target;
	GDestroyNotify func_target_destroy_notify;
	func_gen = __vala_lambda0__bar_func;
	func_gen_target = NULL;
	func_gen_target_destroy_notify = NULL;
	_tmp2_ = func_gen (&_tmp0_, &_tmp1_, func_gen_target);
	func = _tmp2_;
	func_target = _tmp0_;
	func_target_destroy_notify = _tmp1_;
	func (42, func_target);
	_vala_assert (result == 42, "result == 42");
	(func_target_destroy_notify == NULL) ? NULL : (func_target_destroy_notify (func_target), NULL);
	func = NULL;
	func_target = NULL;
	func_target_destroy_notify = NULL;
	(func_gen_target_destroy_notify == NULL) ? NULL : (func_gen_target_destroy_notify (func_gen_target), NULL);
	func_gen = NULL;
	func_gen_target = NULL;
	func_gen_target_destroy_notify = NULL;
}

int
main (int argc,
      char ** argv)
{
	_vala_main ();
	return 0;
}

