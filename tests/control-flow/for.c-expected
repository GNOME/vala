/* control_flow_for.c generated by valac, the Vala compiler
 * generated from control_flow_for.vala, do not modify */

#include <glib.h>

#if !defined(VALA_STRICT_C)
#if !defined(__clang__) && defined(__GNUC__) && (__GNUC__ >= 14)
#pragma GCC diagnostic warning "-Wincompatible-pointer-types"
#elif defined(__clang__) && (__clang_major__ >= 16)
#pragma clang diagnostic ignored "-Wincompatible-function-pointer-types"
#pragma clang diagnostic ignored "-Wincompatible-pointer-types"
#endif
#endif
#if !defined(VALA_EXTERN)
#if defined(_WIN32) || defined(__CYGWIN__)
#define VALA_EXTERN __declspec(dllexport) extern
#elif __GNUC__ >= 4
#define VALA_EXTERN __attribute__((visibility("default"))) extern
#else
#define VALA_EXTERN extern
#endif
#endif

VALA_EXTERN void void_method (void);
VALA_EXTERN void test_for_void_methods (void);
VALA_EXTERN void condition_true (void);
VALA_EXTERN void condition_false (void);
static void _vala_main (void);

void
void_method (void)
{
}

void
test_for_void_methods (void)
{
	{
		gboolean _tmp0_ = FALSE;
		void_method ();
		_tmp0_ = TRUE;
		while (TRUE) {
			if (!_tmp0_) {
				void_method ();
			}
			_tmp0_ = FALSE;
			break;
		}
	}
}

void
condition_true (void)
{
	{
		gboolean _tmp0_ = FALSE;
		_tmp0_ = TRUE;
		while (TRUE) {
			if (!_tmp0_) {
			}
			_tmp0_ = FALSE;
			return;
		}
	}
	g_assert_not_reached ();
}

void
condition_false (void)
{
	{
		gboolean _tmp0_ = FALSE;
		_tmp0_ = TRUE;
		while (TRUE) {
			if (!_tmp0_) {
			}
			_tmp0_ = FALSE;
			break;
		}
	}
}

static void
_vala_main (void)
{
	condition_true ();
	condition_false ();
	test_for_void_methods ();
}

int
main (int argc,
      char ** argv)
{
	_vala_main ();
	return 0;
}

