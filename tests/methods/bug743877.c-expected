/* methods_bug743877.c generated by valac, the Vala compiler
 * generated from methods_bug743877.vala, do not modify */

#include <locale.h>
#include <stdlib.h>
#include <string.h>
#include <glib.h>

#if !defined(VALA_STRICT_C)
#if !defined(__clang__) && defined(__GNUC__) && (__GNUC__ >= 14)
#pragma GCC diagnostic warning "-Wincompatible-pointer-types"
#elif defined(__clang__) && (__clang_major__ >= 16)
#pragma clang diagnostic ignored "-Wincompatible-function-pointer-types"
#pragma clang diagnostic ignored "-Wincompatible-pointer-types"
#endif
#endif

#define _vala_assert(expr, msg) if G_LIKELY (expr) ; else g_assertion_message_expr (G_LOG_DOMAIN, __FILE__, __LINE__, G_STRFUNC, msg);
#define _vala_return_if_fail(expr, msg) if G_LIKELY (expr) ; else { g_return_if_fail_warning (G_LOG_DOMAIN, G_STRFUNC, msg); return; }
#define _vala_return_val_if_fail(expr, msg, val) if G_LIKELY (expr) ; else { g_return_if_fail_warning (G_LOG_DOMAIN, G_STRFUNC, msg); return val; }
#define _vala_warn_if_fail(expr, msg) if G_LIKELY (expr) ; else g_warn_message (G_LOG_DOMAIN, __FILE__, __LINE__, G_STRFUNC, msg);

static void _vala_main (void);
static gssize _vala_array_length (gpointer array);

static void
_vala_main (void)
{
	gchar** charsets = NULL;
	gint charsets_length1 = 0;
	gint _charsets_size_ = 0;
	gboolean is_utf8 = FALSE;
	gchar** _tmp0_ = NULL;
	gboolean _tmp1_;
	setlocale (LC_ALL, "");
	_tmp1_ = g_get_filename_charsets (&_tmp0_);
	charsets = _tmp0_;
	charsets_length1 = -1;
	_charsets_size_ = charsets_length1;
	charsets_length1 = _vala_array_length (charsets);
	is_utf8 = _tmp1_;
	_vala_assert (charsets_length1 != -1, "charsets.length != -1");
}

int
main (int argc,
      char ** argv)
{
	_vala_main ();
	return 0;
}

static gssize
_vala_array_length (gpointer array)
{
	gssize length;
	length = 0;
	if (array) {
		while (((gpointer*) array)[length]) {
			length++;
		}
	}
	return length;
}

