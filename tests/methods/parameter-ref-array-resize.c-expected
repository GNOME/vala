/* methods_parameter_ref_array_resize.c generated by valac, the Vala compiler
 * generated from methods_parameter_ref_array_resize.vala, do not modify */

#include <glib.h>

#if !defined(VALA_STRICT_C)
#if !defined(__clang__) && defined(__GNUC__) && (__GNUC__ >= 14)
#pragma GCC diagnostic warning "-Wincompatible-pointer-types"
#elif defined(__clang__) && (__clang_major__ >= 16)
#pragma clang diagnostic ignored "-Wincompatible-function-pointer-types"
#pragma clang diagnostic ignored "-Wincompatible-pointer-types"
#endif
#endif
#if !defined(VALA_EXTERN)
#if defined(_WIN32) || defined(__CYGWIN__)
#define VALA_EXTERN __declspec(dllexport) extern
#elif __GNUC__ >= 4
#define VALA_EXTERN __attribute__((visibility("default"))) extern
#else
#define VALA_EXTERN extern
#endif
#endif

VALA_EXTERN void foo (gint** a,
          gint* a_length1);
static void _vala_main (void);
static void _vala_array_add1 (gint* * array,
                       gint* length,
                       gint* size,
                       gint value);

void
foo (gint** a,
     gint* a_length1)
{
	gint* _tmp0_;
	_tmp0_ = g_new0 (gint, 1);
	*a = (g_free (*a), NULL);
	*a = _tmp0_;
	*a_length1 = 1;
}

static void
_vala_array_add1 (gint* * array,
                  gint* length,
                  gint* size,
                  gint value)
{
	if ((*length) == (*size)) {
		*size = (*size) ? (2 * (*size)) : 4;
		*array = g_renew (gint, *array, *size);
	}
	(*array)[(*length)++] = value;
}

static void
_vala_main (void)
{
	gint* a = NULL;
	gint* _tmp0_;
	gint a_length1;
	gint _a_size_;
	_tmp0_ = g_new0 (gint, (10 * 1024) * 1024);
	a = _tmp0_;
	a_length1 = (10 * 1024) * 1024;
	_a_size_ = a_length1;
	foo (&a, (gint*) (&a_length1));
	_a_size_ = a_length1;
	{
		gint i = 0;
		i = 1;
		{
			gboolean _tmp1_ = FALSE;
			_tmp1_ = TRUE;
			while (TRUE) {
				if (!_tmp1_) {
					gint _tmp2_;
					_tmp2_ = i;
					i = _tmp2_ + 1;
				}
				_tmp1_ = FALSE;
				if (!(i < ((10 * 1024) * 1024))) {
					break;
				}
				_vala_array_add1 (&a, &a_length1, &_a_size_, 4711);
			}
		}
	}
	a = (g_free (a), NULL);
}

int
main (int argc,
      char ** argv)
{
	_vala_main ();
	return 0;
}

