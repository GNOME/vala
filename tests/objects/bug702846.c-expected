/* objects_bug702846.c generated by valac, the Vala compiler
 * generated from objects_bug702846.vala, do not modify */

#include <glib.h>
#include <stdlib.h>
#include <string.h>

#if !defined(VALA_STRICT_C)
#if !defined(__clang__) && defined(__GNUC__) && (__GNUC__ >= 14)
#pragma GCC diagnostic warning "-Wincompatible-pointer-types"
#elif defined(__clang__) && (__clang_major__ >= 16)
#pragma clang diagnostic ignored "-Wincompatible-function-pointer-types"
#pragma clang diagnostic ignored "-Wincompatible-pointer-types"
#endif
#endif

#define _g_free0(var) (var = (g_free (var), NULL))
#define _g_variant_unref0(var) ((var == NULL) ? NULL : (var = (g_variant_unref (var), NULL)))
#define _vala_assert(expr, msg) if G_LIKELY (expr) ; else g_assertion_message_expr (G_LOG_DOMAIN, __FILE__, __LINE__, G_STRFUNC, msg);
#define _vala_return_if_fail(expr, msg) if G_LIKELY (expr) ; else { g_return_if_fail_warning (G_LOG_DOMAIN, G_STRFUNC, msg); return; }
#define _vala_return_val_if_fail(expr, msg, val) if G_LIKELY (expr) ; else { g_return_if_fail_warning (G_LOG_DOMAIN, G_STRFUNC, msg); return val; }
#define _vala_warn_if_fail(expr, msg) if G_LIKELY (expr) ; else g_warn_message (G_LOG_DOMAIN, __FILE__, __LINE__, G_STRFUNC, msg);

static void _vala_main (void);
static GVariant* _variant_new1 (const gchar* value);
static gchar* _variant_get1 (GVariant* value);

static GVariant*
_variant_new1 (const gchar* value)
{
	return g_variant_ref_sink (g_variant_new_string (value));
}

static gpointer
_g_variant_ref0 (gpointer self)
{
	return self ? g_variant_ref (self) : NULL;
}

static gchar*
_variant_get1 (GVariant* value)
{
	return g_variant_dup_string (value, NULL);
}

static void
_vala_main (void)
{
	GVariant* foo = NULL;
	GVariant* _tmp0_;
	GVariant* bar = NULL;
	GVariant* _tmp1_;
	gchar* baz = NULL;
	gchar* _tmp2_;
	_tmp0_ = _variant_new1 ("baz");
	foo = _tmp0_;
	_tmp1_ = _g_variant_ref0 ((GVariant*) foo);
	bar = _tmp1_;
	_tmp2_ = _variant_get1 (bar);
	baz = _tmp2_;
	_vala_assert (g_strcmp0 (baz, "baz") == 0, "baz == \"baz\"");
	_g_free0 (baz);
	_g_variant_unref0 (bar);
	_g_variant_unref0 (foo);
}

int
main (int argc,
      char ** argv)
{
	_vala_main ();
	return 0;
}

