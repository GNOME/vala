/* enums_enums.c generated by valac, the Vala compiler
 * generated from enums_enums.vala, do not modify */

#include <glib-object.h>
#include <glib.h>
#include <stdio.h>

#define MAMAN_FOOISH_FOO 2
#if !defined(VALA_STRICT_C)
#if !defined(__clang__) && defined(__GNUC__) && (__GNUC__ >= 14)
#pragma GCC diagnostic warning "-Wincompatible-pointer-types"
#elif defined(__clang__) && (__clang_major__ >= 16)
#pragma clang diagnostic ignored "-Wincompatible-function-pointer-types"
#pragma clang diagnostic ignored "-Wincompatible-pointer-types"
#endif
#endif
#if !defined(VALA_EXTERN)
#if defined(_WIN32) || defined(__CYGWIN__)
#define VALA_EXTERN __declspec(dllexport) extern
#elif __GNUC__ >= 4
#define VALA_EXTERN __attribute__((visibility("default"))) extern
#else
#define VALA_EXTERN extern
#endif
#endif

typedef enum  {
	MAMAN_FOO_VAL2 = 2,
	MAMAN_FOO_VAL3,
	MAMAN_FOO_VAL5 = 5
} MamanFoo;

#define MAMAN_TYPE_FOO (maman_foo_get_type ())
typedef enum  {
	MAMAN_FOOISH_VAL1,
	MAMAN_FOOISH_VAL2
} MamanFooish;

#define MAMAN_TYPE_FOOISH (maman_fooish_get_type ())

#define MAMAN_TYPE_BAR (maman_bar_get_type ())
#define MAMAN_BAR(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), MAMAN_TYPE_BAR, MamanBar))
#define MAMAN_BAR_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), MAMAN_TYPE_BAR, MamanBarClass))
#define MAMAN_IS_BAR(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), MAMAN_TYPE_BAR))
#define MAMAN_IS_BAR_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), MAMAN_TYPE_BAR))
#define MAMAN_BAR_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), MAMAN_TYPE_BAR, MamanBarClass))

typedef struct _MamanBar MamanBar;
typedef struct _MamanBarClass MamanBarClass;
typedef struct _MamanBarPrivate MamanBarPrivate;
enum  {
	MAMAN_BAR_0_PROPERTY,
	MAMAN_BAR_NUM_PROPERTIES
};
static GParamSpec* maman_bar_properties[MAMAN_BAR_NUM_PROPERTIES];
#define _g_object_unref0(var) ((var == NULL) ? NULL : (var = (g_object_unref (var), NULL)))

struct _MamanBar {
	GObject parent_instance;
	MamanBarPrivate * priv;
};

struct _MamanBarClass {
	GObjectClass parent_class;
};

static gpointer maman_bar_parent_class = NULL;

VALA_EXTERN GType maman_foo_get_type (void) G_GNUC_CONST ;
VALA_EXTERN GType maman_fooish_get_type (void) G_GNUC_CONST ;
VALA_EXTERN gint maman_fooish_something (MamanFooish self);
VALA_EXTERN GType maman_bar_get_type (void) G_GNUC_CONST ;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (MamanBar, g_object_unref)
VALA_EXTERN void maman_bar_run (MamanBar* self);
static void maman_bar_test_enums_0_conversion (void);
static void maman_bar_test_enum_methods_constants (void);
static gint maman_bar_main (void);
VALA_EXTERN MamanBar* maman_bar_new (void);
VALA_EXTERN MamanBar* maman_bar_construct (GType object_type);
static GType maman_bar_get_type_once (void);

static GType
maman_foo_get_type_once (void)
{
	static const GEnumValue values[] = {{MAMAN_FOO_VAL2, "MAMAN_FOO_VAL2", "val2"}, {MAMAN_FOO_VAL3, "MAMAN_FOO_VAL3", "val3"}, {MAMAN_FOO_VAL5, "MAMAN_FOO_VAL5", "val5"}, {0, NULL, NULL}};
	GType maman_foo_type_id;
	maman_foo_type_id = g_enum_register_static ("MamanFoo", values);
	return maman_foo_type_id;
}

GType
maman_foo_get_type (void)
{
	static volatile gsize maman_foo_type_id__once = 0;
	if (g_once_init_enter (&maman_foo_type_id__once)) {
		GType maman_foo_type_id;
		maman_foo_type_id = maman_foo_get_type_once ();
		g_once_init_leave (&maman_foo_type_id__once, maman_foo_type_id);
	}
	return maman_foo_type_id__once;
}

gint
maman_fooish_something (MamanFooish self)
{
	gint result;
	result = (gint) self;
	return result;
}

static GType
maman_fooish_get_type_once (void)
{
	static const GEnumValue values[] = {{MAMAN_FOOISH_VAL1, "MAMAN_FOOISH_VAL1", "val1"}, {MAMAN_FOOISH_VAL2, "MAMAN_FOOISH_VAL2", "val2"}, {0, NULL, NULL}};
	GType maman_fooish_type_id;
	maman_fooish_type_id = g_enum_register_static ("MamanFooish", values);
	return maman_fooish_type_id;
}

GType
maman_fooish_get_type (void)
{
	static volatile gsize maman_fooish_type_id__once = 0;
	if (g_once_init_enter (&maman_fooish_type_id__once)) {
		GType maman_fooish_type_id;
		maman_fooish_type_id = maman_fooish_get_type_once ();
		g_once_init_leave (&maman_fooish_type_id__once, maman_fooish_type_id);
	}
	return maman_fooish_type_id__once;
}

void
maman_bar_run (MamanBar* self)
{
	FILE* _tmp0_;
	FILE* _tmp1_;
	FILE* _tmp2_;
	FILE* _tmp3_;
	g_return_if_fail (MAMAN_IS_BAR (self));
	_tmp0_ = stdout;
	fprintf (_tmp0_, " %d", (gint) MAMAN_FOO_VAL2);
	_tmp1_ = stdout;
	fprintf (_tmp1_, " %d", (gint) MAMAN_FOO_VAL3);
	_tmp2_ = stdout;
	fprintf (_tmp2_, " 4");
	_tmp3_ = stdout;
	fprintf (_tmp3_, " %d", (gint) MAMAN_FOO_VAL5);
}

static void
maman_bar_test_enums_0_conversion (void)
{
	MamanFoo foo = 0;
	foo = 0;
}

static void
maman_bar_test_enum_methods_constants (void)
{
	MamanFooish x = 0;
	FILE* _tmp0_;
	FILE* _tmp1_;
	x = MAMAN_FOOISH_VAL1;
	_tmp0_ = stdout;
	fprintf (_tmp0_, "%d", maman_fooish_something (x));
	_tmp1_ = stdout;
	fprintf (_tmp1_, "%d", MAMAN_FOOISH_FOO);
}

static gint
maman_bar_main (void)
{
	FILE* _tmp0_;
	MamanBar* bar = NULL;
	MamanBar* _tmp1_;
	FILE* _tmp2_;
	gint result;
	_tmp0_ = stdout;
	fprintf (_tmp0_, "Enum Test: 1");
	_tmp1_ = maman_bar_new ();
	bar = _tmp1_;
	maman_bar_run (bar);
	_tmp2_ = stdout;
	fprintf (_tmp2_, " 6\n");
	maman_bar_test_enums_0_conversion ();
	maman_bar_test_enum_methods_constants ();
	result = 0;
	_g_object_unref0 (bar);
	return result;
}

int
main (int argc,
      char ** argv)
{
	return maman_bar_main ();
}

MamanBar*
maman_bar_construct (GType object_type)
{
	MamanBar * self = NULL;
	self = (MamanBar*) g_object_new (object_type, NULL);
	return self;
}

MamanBar*
maman_bar_new (void)
{
	return maman_bar_construct (MAMAN_TYPE_BAR);
}

static void
maman_bar_class_init (MamanBarClass * klass,
                      gpointer klass_data)
{
	maman_bar_parent_class = g_type_class_peek_parent (klass);
}

static void
maman_bar_instance_init (MamanBar * self,
                         gpointer klass)
{
}

static GType
maman_bar_get_type_once (void)
{
	static const GTypeInfo g_define_type_info = { sizeof (MamanBarClass), (GBaseInitFunc) NULL, (GBaseFinalizeFunc) NULL, (GClassInitFunc) maman_bar_class_init, (GClassFinalizeFunc) NULL, NULL, sizeof (MamanBar), 0, (GInstanceInitFunc) maman_bar_instance_init, NULL };
	GType maman_bar_type_id;
	maman_bar_type_id = g_type_register_static (G_TYPE_OBJECT, "MamanBar", &g_define_type_info, 0);
	return maman_bar_type_id;
}

GType
maman_bar_get_type (void)
{
	static volatile gsize maman_bar_type_id__once = 0;
	if (g_once_init_enter (&maman_bar_type_id__once)) {
		GType maman_bar_type_id;
		maman_bar_type_id = maman_bar_get_type_once ();
		g_once_init_leave (&maman_bar_type_id__once, maman_bar_type_id);
	}
	return maman_bar_type_id__once;
}

