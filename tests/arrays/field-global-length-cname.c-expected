/* arrays_field_global_length_cname.c generated by valac, the Vala compiler
 * generated from arrays_field_global_length_cname.vala, do not modify */

#include <glib.h>

#if !defined(VALA_STRICT_C)
#if !defined(__clang__) && defined(__GNUC__) && (__GNUC__ >= 14)
#pragma GCC diagnostic warning "-Wincompatible-pointer-types"
#elif defined(__clang__) && (__clang_major__ >= 16)
#pragma clang diagnostic ignored "-Wincompatible-function-pointer-types"
#pragma clang diagnostic ignored "-Wincompatible-pointer-types"
#endif
#endif
#if !defined(VALA_EXTERN)
#if defined(_WIN32) || defined(__CYGWIN__)
#define VALA_EXTERN __declspec(dllexport) extern
#elif __GNUC__ >= 4
#define VALA_EXTERN __attribute__((visibility("default"))) extern
#else
#define VALA_EXTERN extern
#endif
#endif

#define _vala_assert(expr, msg) if G_LIKELY (expr) ; else g_assertion_message_expr (G_LOG_DOMAIN, __FILE__, __LINE__, G_STRFUNC, msg);
#define _vala_return_if_fail(expr, msg) if G_LIKELY (expr) ; else { g_return_if_fail_warning (G_LOG_DOMAIN, G_STRFUNC, msg); return; }
#define _vala_return_val_if_fail(expr, msg, val) if G_LIKELY (expr) ; else { g_return_if_fail_warning (G_LOG_DOMAIN, G_STRFUNC, msg); return val; }
#define _vala_warn_if_fail(expr, msg) if G_LIKELY (expr) ; else g_warn_message (G_LOG_DOMAIN, __FILE__, __LINE__, G_STRFUNC, msg);

VALA_EXTERN gint* foo;
VALA_EXTERN gint foo_len;
gint* foo = NULL;
gint foo_len = 0;
VALA_EXTERN gint foo_length1;
gint foo_length1 = 0;

static void _vala_main (void);

static void
_vala_main (void)
{
	gint* _tmp0_;
	gint* _tmp1_;
	gint _tmp1__length1;
	_tmp0_ = g_new0 (gint, 2);
	_tmp0_[0] = 23;
	_tmp0_[1] = 42;
	foo = (g_free (foo), NULL);
	foo = _tmp0_;
	foo_len = 2;
	_tmp1_ = foo;
	_tmp1__length1 = foo_len;
	_vala_assert (_tmp1__length1 == 2, "foo.length == 2");
}

int
main (int argc,
      char ** argv)
{
	_vala_main ();
	return 0;
}

