/* arrays_length_inline_assignment.c generated by valac, the Vala compiler
 * generated from arrays_length_inline_assignment.vala, do not modify */

#include <glib.h>

#if !defined(VALA_STRICT_C)
#if !defined(__clang__) && defined(__GNUC__) && (__GNUC__ >= 14)
#pragma GCC diagnostic warning "-Wincompatible-pointer-types"
#elif defined(__clang__) && (__clang_major__ >= 16)
#pragma clang diagnostic ignored "-Wincompatible-function-pointer-types"
#pragma clang diagnostic ignored "-Wincompatible-pointer-types"
#endif
#endif

#define _vala_assert(expr, msg) if G_LIKELY (expr) ; else g_assertion_message_expr (G_LOG_DOMAIN, __FILE__, __LINE__, G_STRFUNC, msg);
#define _vala_return_if_fail(expr, msg) if G_LIKELY (expr) ; else { g_return_if_fail_warning (G_LOG_DOMAIN, G_STRFUNC, msg); return; }
#define _vala_return_val_if_fail(expr, msg, val) if G_LIKELY (expr) ; else { g_return_if_fail_warning (G_LOG_DOMAIN, G_STRFUNC, msg); return val; }
#define _vala_warn_if_fail(expr, msg) if G_LIKELY (expr) ; else g_warn_message (G_LOG_DOMAIN, __FILE__, __LINE__, G_STRFUNC, msg);

static void _vala_main (void);

static void
_vala_main (void)
{
	{
		gint* i = NULL;
		gint* _tmp0_;
		gint i_length1;
		gint _i_size_;
		gint j = 0;
		gint _tmp1_;
		gint _tmp2_;
		_tmp0_ = g_new0 (gint, 2);
		_tmp0_[0] = 23;
		_tmp0_[1] = 42;
		i = _tmp0_;
		i_length1 = 2;
		_i_size_ = i_length1;
		i_length1 = i_length1 - 1;
		_tmp1_ = i_length1;
		j = _tmp1_;
		_vala_assert (i_length1 == 1, "i.length == 1");
		_vala_assert (j == 1, "j == 1");
		i_length1 = i_length1 + 1;
		_tmp2_ = i_length1;
		j = _tmp2_;
		_vala_assert (i_length1 == 2, "i.length == 2");
		_vala_assert (j == 2, "j == 2");
		i = (g_free (i), NULL);
	}
	{
		gint* i = NULL;
		gint* _tmp3_;
		gint i_length1;
		gint _i_size_;
		gint j = 0;
		_tmp3_ = g_new0 (gint, 2);
		_tmp3_[0] = 23;
		_tmp3_[1] = 42;
		i = _tmp3_;
		i_length1 = 2;
		_i_size_ = i_length1;
		i_length1 = i_length1 - 1;
		j = i_length1;
		_vala_assert (i_length1 == 1, "i.length == 1");
		_vala_assert (j == 1, "j == 1");
		i_length1 = i_length1 + 1;
		j = i_length1;
		_vala_assert (i_length1 == 2, "i.length == 2");
		_vala_assert (j == 2, "j == 2");
		i = (g_free (i), NULL);
	}
	{
		gint* i = NULL;
		gint* _tmp4_;
		gint i_length1;
		gint _i_size_;
		gint j = 0;
		gint _tmp5_;
		gint _tmp6_;
		_tmp4_ = g_new0 (gint, 2);
		_tmp4_[0] = 23;
		_tmp4_[1] = 42;
		i = _tmp4_;
		i_length1 = 2;
		_i_size_ = i_length1;
		_tmp5_ = i_length1;
		i_length1 = _tmp5_ - 1;
		j = _tmp5_;
		_vala_assert (i_length1 == 1, "i.length == 1");
		_vala_assert (j == 2, "j == 2");
		_tmp6_ = i_length1;
		i_length1 = _tmp6_ + 1;
		j = _tmp6_;
		_vala_assert (i_length1 == 2, "i.length == 2");
		_vala_assert (j == 1, "j == 1");
		i = (g_free (i), NULL);
	}
}

int
main (int argc,
      char ** argv)
{
	_vala_main ();
	return 0;
}

