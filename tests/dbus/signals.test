Packages: gio-2.0
D-Bus

Program: client

[DBus (name = "org.example.Test")]
interface Test : Object {
	public signal void foo (int i);
	public signal void bar (string[] baz);
	internal signal void finish ();

	public abstract void do_foo (int i) throws DBusError, IOError;
	public abstract void do_bar (string[] baz) throws DBusError, IOError;
}

MainLoop main_loop;

void main () {
	// client
	Test test = Bus.get_proxy_sync (BusType.SESSION, "org.example.Test", "/org/example/test");

	test.foo.connect ((i) => {
		assert (i == 42);
	});

	test.bar.connect ((baz) => {
		assert (baz.length == 3);
		assert (baz[0] == "zero");
		assert (baz[1] == "one");
		assert (baz[2] == "two");
		main_loop.quit ();
	});

	test.finish.connect (() => {
		assert_not_reached ();
	});

	test.do_foo (42);
	test.do_bar ({"zero", "one", "two"});

	main_loop = new MainLoop ();
	main_loop.run ();
}

Program: server

[DBus (name = "org.example.Test")]
class Test : Object {
	public signal void foo (int i);
	public signal void bar (string[] baz);
	private signal void finish ();

	public void do_foo (int i) throws DBusError, IOError {
		this.foo (i);
		finish ();
	}

	public void do_bar (string[] baz) throws DBusError, IOError {
		this.bar (baz);
	}
}

MainLoop main_loop;

void client_exit (Pid pid, int status) {
	// client finished, terminate server
	assert (status == 0);
	main_loop.quit ();
}

void main () {
	var conn = Bus.get_sync (BusType.SESSION);
	conn.register_object ("/org/example/test", new Test ());

	// try to register service in session bus
	var request_result = conn.call_sync ("org.freedesktop.DBus", "/org/freedesktop/DBus", "org.freedesktop.DBus", "RequestName",
	                                      new Variant ("(su)", "org.example.Test", 0x4), null, 0, -1);
	assert ((uint) request_result.get_child_value (0) == 1);

	// server ready, spawn client
	Pid client_pid;
	Process.spawn_async (null, { "dbus_signals_client" }, null, SpawnFlags.DO_NOT_REAP_CHILD, null, out client_pid);
	ChildWatch.add (client_pid, client_exit);

	main_loop = new MainLoop ();
	main_loop.run ();
}
