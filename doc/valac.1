.\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.49.3.
.TH VALAC "1" "November 2023" "Vala 0.56.14" "User Commands"
.SH NAME
valac \- compiler that translates Vala source code into C source and header files
.SH SYNOPSIS
.B valac
[\fIOPTION\fR]... [\fIFILE\fR]...
.SH DESCRIPTION
Vala  is  a  programming  language  that  aims  to  bring  modern
programming language features to GNOME developers without imposing any
additional  runtime requirements  and  without using  a different  ABI
compared to applications and libraries written in C.
.TP
valac, the Vala compiler, is a self-hosting compiler that translates
Vala source code into C source and header files. It uses the GObject
type system to create classes and interfaces declared in the Vala
source code.
.SS "Usage:"
.IP
valac [OPTION?] FILE... \- Vala Compiler
.SS "Help Options:"
.TP
\-?, \fB\-\-help\fR
Show help options
.SS "Application Options:"
.TP
\fB\-\-vapidir\fR=\fI\,DIRECTORY\/\fR...
Look for package bindings in DIRECTORY
.TP
\fB\-\-girdir\fR=\fI\,DIRECTORY\/\fR...
Look for .gir files in DIRECTORY
.TP
\fB\-\-metadatadir\fR=\fI\,DIRECTORY\/\fR...
Look for GIR .metadata files in DIRECTORY
.TP
\fB\-\-pkg\fR=\fI\,PACKAGE\/\fR...
Include binding for PACKAGE
.TP
\fB\-\-vapi\fR=\fI\,FILE\/\fR
Output VAPI file name
.TP
\fB\-\-library\fR=\fI\,NAME\/\fR
Library name
.TP
\fB\-\-shared\-library\fR=\fI\,NAME\/\fR
Shared library name used in generated gir
.TP
\fB\-\-gir\fR=\fI\,NAME\-VERSION\/\fR.gir
GObject\-Introspection repository file name
.TP
\fB\-b\fR, \fB\-\-basedir\fR=\fI\,DIRECTORY\/\fR
Base source directory
.TP
\fB\-d\fR, \fB\-\-directory\fR=\fI\,DIRECTORY\/\fR
Change output directory from current working directory
.TP
\fB\-\-version\fR
Display version number
.TP
\fB\-\-api\-version\fR
Display API version number
.TP
\fB\-C\fR, \fB\-\-ccode\fR
Output C code
.TP
\fB\-H\fR, \fB\-\-header\fR=\fI\,FILE\/\fR
Output C header file
.TP
\fB\-\-use\-header\fR
Use C header file (DEPRECATED AND IGNORED)
.TP
\fB\-\-includedir\fR=\fI\,DIRECTORY\/\fR
Directory used to include the C header file
.TP
\fB\-h\fR, \fB\-\-internal\-header\fR=\fI\,FILE\/\fR
Output internal C header file
.TP
\fB\-\-internal\-vapi\fR=\fI\,FILE\/\fR
Output vapi with internal api
.TP
\fB\-\-fast\-vapi\fR
Output vapi without performing symbol resolution
.TP
\fB\-\-use\-fast\-vapi\fR
Use \fB\-\-fast\-vapi\fR output during this compile
.TP
\fB\-\-vapi\-comments\fR
Include comments in generated vapi
.TP
\fB\-\-deps\fR
Write make\-style dependency information to this file
.TP
\fB\-\-depfile\fR
Write make\-style external dependency information for build systems to this file
.TP
\fB\-\-list\-sources\fR
Output a list of all source and binding files which are used
.TP
\fB\-\-symbols\fR=\fI\,FILE\/\fR
Output symbols file
.TP
\fB\-c\fR, \fB\-\-compile\fR
Compile but do not link
.TP
\fB\-o\fR, \fB\-\-output\fR=\fI\,FILE\/\fR
Place output in file FILE
.TP
\fB\-g\fR, \fB\-\-debug\fR
Produce debug information
.TP
\fB\-\-thread\fR
Enable multithreading support (DEPRECATED AND IGNORED)
.TP
\fB\-\-enable\-mem\-profiler\fR
Enable GLib memory profiler
.TP
\fB\-D\fR, \fB\-\-define\fR=\fI\,SYMBOL\/\fR...
Define SYMBOL
.TP
\fB\-\-main\fR=\fI\,SYMBOL\/\fR...
Use SYMBOL as entry point
.TP
\fB\-\-nostdpkg\fR
Do not include standard packages
.TP
\fB\-\-disable\-assert\fR
Disable assertions
.TP
\fB\-\-enable\-checking\fR
Enable additional run\-time checks
.TP
\fB\-\-enable\-deprecated\fR
Enable deprecated features
.TP
\fB\-\-hide\-internal\fR
Hide symbols marked as internal
.TP
\fB\-\-enable\-experimental\fR
Enable experimental features
.TP
\fB\-\-disable\-warnings\fR
Disable warnings
.TP
\fB\-\-fatal\-warnings\fR
Treat warnings as fatal
.TP
\fB\-\-disable\-since\-check\fR
Do not check whether used symbols exist in local packages
.TP
\fB\-k\fR, \fB\-\-keep\-going\fR
Continue as much as possible after an error
.TP
\fB\-\-enable\-experimental\-non\-null\fR
Enable experimental enhancements for non\-null types
.TP
\fB\-\-enable\-gobject\-tracing\fR
Enable GObject creation tracing
.TP
\fB\-\-cc\fR=\fI\,COMMAND\/\fR
Use COMMAND as C compiler command
.TP
\fB\-X\fR, \fB\-\-Xcc\fR=\fI\,OPTION\/\fR...
Pass OPTION to the C compiler
.TP
\fB\-\-pkg\-config\fR=\fI\,COMMAND\/\fR
Use COMMAND as pkg\-config command
.TP
\fB\-\-dump\-tree\fR=\fI\,FILE\/\fR
Write code tree to FILE
.TP
\fB\-\-save\-temps\fR
Keep temporary files
.TP
\fB\-\-profile\fR=\fI\,PROFILE\/\fR
Minimum runtime dependency: 'gobject' (default) or 'posix' (minimal libc)
.RS
\fIgobject\fR enables GLib's GType runtime type system. The runtime environment
will usually require libgobject and its small number of dependencies.
\fIposix\fR removes the dependency on GLib and disables the runtime type
system. The profile either generates alternative code or errors at compile time
if a Vala language feature is used that requires the runtime type system. This
is useful for writing code, for example, that targets microcontrollers or
for extremely small system utilities or container images. The runtime
environment will usually require a small subset of the ISO C standard library.
.RE
.TP
\fB\-q\fR, \fB\-\-quiet\fR
Do not print messages to the console
.TP
\fB\-v\fR, \fB\-\-verbose\fR
Print additional messages to the console
.TP
\fB\-\-no\-color\fR
Disable colored output, alias for \fB\-\-color\fR=\fI\,never\/\fR
.TP
\fB\-\-color\fR=\fI\,WHEN\/\fR
Enable color output, options are 'always', 'never', or 'auto'
.RS
When no value is given \fIalways\fR is implied. When neither \fB--color\fR
or \fB--no-color\fR are declared then \fB--color\fR=\fIauto\fR is used where
output is colored when stderr is a terminal.
.RE
.TP
\fB\-\-target\-glib=\fR'MAJOR.MINOR', or 'auto'
Target version of glib for code generation
.TP
\fB\-\-gresources\fR=\fI\,FILE\/\fR...
XML of gresources
.TP
\fB\-\-gresourcesdir\fR=\fI\,DIRECTORY\/\fR...
Look for resources in DIRECTORY
.TP
\fB\-\-enable\-version\-header\fR
Write vala build version in generated files
.TP
\fB\-\-disable\-version\-header\fR
Do not write vala build version in generated files
.TP
\fB\-\-run\-args\fR
Arguments passed to directly compiled executable
.TP
\fB\-\-abi\-stability\fR
Enable support for ABI stability
.RS
This changes the current behaviour to output public members of classes and
interfaces the same order as they appear in Vala source.
For libraries is recommended to use \fB--abi-stability\fR to ensure the
maintainability of the resulting Application Binary Interface (ABI).
This option is disabled by default for backward compatibility because it can
break ABI of existing projects.
.RE
.SH BUGS
https://gitlab.gnome.org/GNOME/vala/issues
.SH "HOMEPAGE OR CONTACT"
https://wiki.gnome.org/Projects/Vala
.SH FEATURES
Interfaces, properties, signals, foreach, lambda expressions, type
inference for local variables, generics, non-null types, assisted memory
management, exception handling
.SH AUTHORS
J??rg Billeter, Raffaele Sandrini, Rico Tzschichholz.
